/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    
    int size(ListNode *node){
        
        if(!node)
            return 0;
        
        int size=0;
        while(node){
            
            size++;
            node= node->next;
        }
        
        return size;
    }
    
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        
        if (!headA && !headB) return NULL; 
        
        ListNode* tempa= headA;
        ListNode* tempb= headB;
        
        int start= size(tempa)- size(tempb);
        
         while(start > 0 ){
            
            tempa= tempa->next;
            start--;
            
        }
       
        while(start < 0 ){
            
            tempb= tempb->next;
            start++;
            
        }
        
        while(tempa && tempb){
            
            if(tempa==tempb)
                return tempa;
            
            tempa=tempa->next;
            tempb=tempb->next;
            
        }
        
        return NULL;
    }
};
